Guice's default Singleton scope synchronizes all object creation on a single lock ("see here":http://code.google.com/p/google-guice/source/browse/core/src/com/google/inject/Scopes.java#63). It does this to avoid deadlocks with circular dependencies. FineGrainedLazySingleton instead locks on the key so that multiple singletons can be created concurrently. Circular dependencies are rare so FineGrainedLazySingleton risks deadlocks in those situations for the benefit of better concurrency.