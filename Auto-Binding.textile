Governator can scan your CLASSPATH to do "auto binding". There are two types of auto binding supported:

* AutoBindSingleton
* AutoBind (for injected arguments/fields)

h2. Configuration

Governator will only scan configured packages from the CLASSPATH. Set the packages to use with the @usingBasePackages()@ method of the @LifecycleInjectorBuilder@.

h2. AutoBindSingleton

Classes annotated with @AutoBindSingleton@ will get auto-bound as Eager Singletons. This is useful for stand-alone classes such as cleanup tasks, etc. that aren't referred to in the code. E.g.

```java
@AutoBindSingleton
public class MyClass {
   ...
}
```

Governator will bind this class as:


```java
binder.bind(MyClass.class).asEagerSingleton();
```

h2. Fields and Arguments

TBD